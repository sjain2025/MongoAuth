{"ast":null,"code":"////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nconst {\n  EJSON\n} = require(\"bson\");\n\nconst {\n  DefaultNetworkTransport\n} = require(\"@realm/network-transport\");\n\nconst {\n  safeGlobalThis\n} = require(\"@realm/common\");\n\nconst {\n  cleanArguments,\n  getEnvironment\n} = require(\"./utils\");\n/**\n * Iterates the global to ensure all globals needed for watching are available.\n */\n\n\nfunction ensureWatchDependencies() {\n  const environment = getEnvironment();\n\n  if (environment === \"reactnative\") {\n    const EXPECTED_GLOBALS = [\"fetch\", \"ReadableStream\", \"TextDecoder\"];\n\n    for (const name of EXPECTED_GLOBALS) {\n      if (!(name in safeGlobalThis)) {\n        throw new Error(`Realm expects the ${name} global: Please use https://www.npmjs.com/package/react-native-polyfill-globals`);\n      }\n    }\n  }\n}\n/**\n * A remote collection of documents.\n */\n\n\nclass MongoDBCollection {\n  /**\n   * Construct a remote collection of documents\n   */\n  constructor(user, serviceName, databaseName, collectionName) {\n    this.functions = user._functionsOnService(serviceName);\n    this.databaseName = databaseName;\n    this.collectionName = collectionName;\n    this.user = user;\n    this.serviceName = serviceName;\n  }\n  /** @inheritdoc */\n\n\n  get name() {\n    return this.collectionName;\n  }\n  /** @inheritdoc */\n\n\n  find() {\n    let filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.functions.find({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      project: options.projection,\n      sort: options.sort,\n      limit: options.limit\n    });\n  }\n  /** @inheritdoc */\n\n\n  findOne() {\n    let filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.functions.findOne({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      project: options.projection,\n      sort: options.sort\n    });\n  }\n  /** @inheritdoc */\n\n\n  findOneAndUpdate() {\n    let filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let update = arguments.length > 1 ? arguments[1] : undefined;\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this.functions.findOneAndUpdate({\n      database: this.databaseName,\n      collection: this.collectionName,\n      filter: filter,\n      update: update,\n      sort: options.sort,\n      projection: options.projection,\n      upsert: options.upsert,\n      returnNewDocument: options.returnNewDocument\n    });\n  }\n  /** @inheritdoc */\n\n\n  findOneAndReplace() {\n    let filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let replacement = arguments.length > 1 ? arguments[1] : undefined;\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this.functions.findOneAndReplace({\n      database: this.databaseName,\n      collection: this.collectionName,\n      filter: filter,\n      update: replacement,\n      sort: options.sort,\n      projection: options.projection,\n      upsert: options.upsert,\n      returnNewDocument: options.returnNewDocument\n    });\n  }\n  /** @inheritdoc */\n\n\n  findOneAndDelete() {\n    let filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.functions.findOneAndReplace({\n      database: this.databaseName,\n      collection: this.collectionName,\n      filter: filter,\n      sort: options.sort,\n      projection: options.projection\n    });\n  }\n  /** @inheritdoc */\n\n\n  aggregate(pipeline) {\n    return this.functions.aggregate({\n      database: this.databaseName,\n      collection: this.collectionName,\n      pipeline: pipeline\n    });\n  }\n  /** @inheritdoc */\n\n\n  count() {\n    let filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.functions.count({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      limit: options.limit\n    });\n  }\n  /** @inheritdoc */\n\n\n  insertOne(document) {\n    return this.functions.insertOne({\n      database: this.databaseName,\n      collection: this.collectionName,\n      document\n    });\n  }\n  /** @inheritdoc */\n\n\n  insertMany(documents) {\n    return this.functions.insertMany({\n      database: this.databaseName,\n      collection: this.collectionName,\n      documents: documents\n    });\n  }\n  /** @inheritdoc */\n\n\n  deleteOne() {\n    let filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return this.functions.deleteOne({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter\n    });\n  }\n  /** @inheritdoc */\n\n\n  deleteMany() {\n    let filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return this.functions.deleteMany({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter\n    });\n  }\n  /** @inheritdoc */\n\n\n  updateOne(filter, update) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this.functions.updateOne({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      update,\n      upsert: options.upsert,\n      arrayFilters: options.arrayFilters\n    });\n  }\n  /** @inheritdoc */\n\n\n  updateMany(filter, update) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this.functions.updateMany({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      update,\n      upsert: options.upsert,\n      arrayFilters: options.arrayFilters\n    });\n  }\n\n  async *watch() {\n    let {\n      ids = undefined,\n      filter = undefined\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    ensureWatchDependencies();\n    const args = cleanArguments({\n      database: this.databaseName,\n      collection: this.collectionName,\n      ids,\n      filter\n    });\n    const stringifiedArgs = EJSON.stringify([args], {\n      relaxed: false\n    });\n\n    const request = this.user._makeStreamingRequest(\"watch\", this.serviceName, stringifiedArgs);\n\n    const reply = await new DefaultNetworkTransport().fetch(request);\n\n    if (!reply.ok) {\n      throw {\n        code: reply.status,\n        message: await reply.text()\n      };\n    }\n\n    let watchStream = this.user._newWatchStream();\n\n    for await (let chunk of reply.body) {\n      watchStream.feedBuffer(chunk);\n\n      while (watchStream.state == \"HAVE_EVENT\") {\n        let next = watchStream.nextEvent();\n        yield EJSON.parse(next);\n      }\n\n      if (watchStream.state == \"HAVE_ERROR\") throw watchStream.error;\n    }\n  }\n\n}\n\nmodule.exports = {\n  MongoDBCollection\n};","map":{"version":3,"names":["EJSON","require","DefaultNetworkTransport","safeGlobalThis","cleanArguments","getEnvironment","ensureWatchDependencies","environment","EXPECTED_GLOBALS","name","Error","MongoDBCollection","constructor","user","serviceName","databaseName","collectionName","functions","_functionsOnService","find","filter","options","database","collection","query","project","projection","sort","limit","findOne","findOneAndUpdate","update","upsert","returnNewDocument","findOneAndReplace","replacement","findOneAndDelete","aggregate","pipeline","count","insertOne","document","insertMany","documents","deleteOne","deleteMany","updateOne","arrayFilters","updateMany","watch","ids","undefined","args","stringifiedArgs","stringify","relaxed","request","_makeStreamingRequest","reply","fetch","ok","code","status","message","text","watchStream","_newWatchStream","chunk","body","feedBuffer","state","next","nextEvent","parse","error","module","exports"],"sources":["/Users/sandeepjain/mongoauth/node_modules/realm/lib/mongo-client.js"],"sourcesContent":["////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nconst { EJSON } = require(\"bson\");\nconst { DefaultNetworkTransport } = require(\"@realm/network-transport\");\nconst { safeGlobalThis } = require(\"@realm/common\");\n\nconst { cleanArguments, getEnvironment } = require(\"./utils\");\n\n/**\n * Iterates the global to ensure all globals needed for watching are available.\n */\nfunction ensureWatchDependencies() {\n  const environment = getEnvironment();\n  if (environment === \"reactnative\") {\n    const EXPECTED_GLOBALS = [\"fetch\", \"ReadableStream\", \"TextDecoder\"];\n    for (const name of EXPECTED_GLOBALS) {\n      if (!(name in safeGlobalThis)) {\n        throw new Error(\n          `Realm expects the ${name} global: Please use https://www.npmjs.com/package/react-native-polyfill-globals`,\n        );\n      }\n    }\n  }\n}\n\n/**\n * A remote collection of documents.\n */\nclass MongoDBCollection {\n  /**\n   * Construct a remote collection of documents\n   */\n  constructor(user, serviceName, databaseName, collectionName) {\n    this.functions = user._functionsOnService(serviceName);\n    this.databaseName = databaseName;\n    this.collectionName = collectionName;\n    this.user = user;\n    this.serviceName = serviceName;\n  }\n\n  /** @inheritdoc */\n  get name() {\n    return this.collectionName;\n  }\n\n  /** @inheritdoc */\n  find(filter = {}, options = {}) {\n    return this.functions.find({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      project: options.projection,\n      sort: options.sort,\n      limit: options.limit,\n    });\n  }\n\n  /** @inheritdoc */\n  findOne(filter = {}, options = {}) {\n    return this.functions.findOne({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      project: options.projection,\n      sort: options.sort,\n    });\n  }\n\n  /** @inheritdoc */\n  findOneAndUpdate(filter = {}, update, options = {}) {\n    return this.functions.findOneAndUpdate({\n      database: this.databaseName,\n      collection: this.collectionName,\n      filter: filter,\n      update: update,\n      sort: options.sort,\n      projection: options.projection,\n      upsert: options.upsert,\n      returnNewDocument: options.returnNewDocument,\n    });\n  }\n\n  /** @inheritdoc */\n  findOneAndReplace(filter = {}, replacement, options = {}) {\n    return this.functions.findOneAndReplace({\n      database: this.databaseName,\n      collection: this.collectionName,\n      filter: filter,\n      update: replacement,\n      sort: options.sort,\n      projection: options.projection,\n      upsert: options.upsert,\n      returnNewDocument: options.returnNewDocument,\n    });\n  }\n\n  /** @inheritdoc */\n  findOneAndDelete(filter = {}, options = {}) {\n    return this.functions.findOneAndReplace({\n      database: this.databaseName,\n      collection: this.collectionName,\n      filter: filter,\n      sort: options.sort,\n      projection: options.projection,\n    });\n  }\n\n  /** @inheritdoc */\n  aggregate(pipeline) {\n    return this.functions.aggregate({\n      database: this.databaseName,\n      collection: this.collectionName,\n      pipeline: pipeline,\n    });\n  }\n\n  /** @inheritdoc */\n  count(filter = {}, options = {}) {\n    return this.functions.count({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      limit: options.limit,\n    });\n  }\n\n  /** @inheritdoc */\n  insertOne(document) {\n    return this.functions.insertOne({\n      database: this.databaseName,\n      collection: this.collectionName,\n      document,\n    });\n  }\n\n  /** @inheritdoc */\n  insertMany(documents) {\n    return this.functions.insertMany({\n      database: this.databaseName,\n      collection: this.collectionName,\n      documents: documents,\n    });\n  }\n\n  /** @inheritdoc */\n  deleteOne(filter = {}) {\n    return this.functions.deleteOne({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n    });\n  }\n\n  /** @inheritdoc */\n  deleteMany(filter = {}) {\n    return this.functions.deleteMany({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n    });\n  }\n\n  /** @inheritdoc */\n  updateOne(filter, update, options = {}) {\n    return this.functions.updateOne({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      update,\n      upsert: options.upsert,\n      arrayFilters: options.arrayFilters,\n    });\n  }\n\n  /** @inheritdoc */\n  updateMany(filter, update, options = {}) {\n    return this.functions.updateMany({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      update,\n      upsert: options.upsert,\n      arrayFilters: options.arrayFilters,\n    });\n  }\n\n  async *watch({ ids = undefined, filter = undefined } = {}) {\n    ensureWatchDependencies();\n\n    const args = cleanArguments({\n      database: this.databaseName,\n      collection: this.collectionName,\n      ids,\n      filter,\n    });\n\n    const stringifiedArgs = EJSON.stringify([args], { relaxed: false });\n    const request = this.user._makeStreamingRequest(\"watch\", this.serviceName, stringifiedArgs);\n    const reply = await new DefaultNetworkTransport().fetch(request);\n    if (!reply.ok) {\n      throw { code: reply.status, message: await reply.text() };\n    }\n\n    let watchStream = this.user._newWatchStream();\n    for await (let chunk of reply.body) {\n      watchStream.feedBuffer(chunk);\n      while (watchStream.state == \"HAVE_EVENT\") {\n        let next = watchStream.nextEvent();\n        yield EJSON.parse(next);\n      }\n      if (watchStream.state == \"HAVE_ERROR\") throw watchStream.error;\n    }\n  }\n}\n\nmodule.exports = { MongoDBCollection };\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}