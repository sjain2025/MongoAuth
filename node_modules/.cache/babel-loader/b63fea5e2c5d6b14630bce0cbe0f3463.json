{"ast":null,"code":"////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2021 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nconst {\n  EJSON\n} = require(\"bson\");\n\nfunction waitForCompletion(session, fn, timeout, timeoutErrorMessage) {\n  const waiter = new Promise((resolve, reject) => {\n    fn.call(session, error => {\n      if (error === undefined) {\n        setTimeout(() => resolve(), 1);\n      } else {\n        setTimeout(() => reject(error), 1);\n      }\n    });\n  });\n\n  if (timeout === undefined) {\n    return waiter;\n  }\n\n  return Promise.race([waiter, new Promise((resolve, reject) => {\n    setTimeout(() => {\n      reject(timeoutErrorMessage);\n    }, timeout);\n  })]);\n}\n\nconst instanceMethods = {\n  get config() {\n    // Parse the EJSON properties\n    const config = this._config;\n\n    if (config) {\n      if (config.partitionValue) {\n        return { ...config,\n          partitionValue: EJSON.parse(config.partitionValue)\n        };\n      } else {\n        return config;\n      }\n    } else {\n      return undefined;\n    }\n  },\n\n  uploadAllLocalChanges(timeout) {\n    return waitForCompletion(this, this._waitForUploadCompletion, timeout, `Uploading changes did not complete in ${timeout} ms.`);\n  },\n\n  downloadAllServerChanges(timeout) {\n    return waitForCompletion(this, this._waitForDownloadCompletion, timeout, `Downloading changes did not complete in ${timeout} ms.`);\n  }\n\n};\nconst staticMethods = {// none\n};\nmodule.exports = {\n  static: staticMethods,\n  instance: instanceMethods\n};","map":{"version":3,"names":["EJSON","require","waitForCompletion","session","fn","timeout","timeoutErrorMessage","waiter","Promise","resolve","reject","call","error","undefined","setTimeout","race","instanceMethods","config","_config","partitionValue","parse","uploadAllLocalChanges","_waitForUploadCompletion","downloadAllServerChanges","_waitForDownloadCompletion","staticMethods","module","exports","static","instance"],"sources":["/Users/sandeepjain/mongoauth/node_modules/realm/lib/session.js"],"sourcesContent":["////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2021 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nconst { EJSON } = require(\"bson\");\n\nfunction waitForCompletion(session, fn, timeout, timeoutErrorMessage) {\n  const waiter = new Promise((resolve, reject) => {\n    fn.call(session, (error) => {\n      if (error === undefined) {\n        setTimeout(() => resolve(), 1);\n      } else {\n        setTimeout(() => reject(error), 1);\n      }\n    });\n  });\n  if (timeout === undefined) {\n    return waiter;\n  }\n  return Promise.race([\n    waiter,\n    new Promise((resolve, reject) => {\n      setTimeout(() => {\n        reject(timeoutErrorMessage);\n      }, timeout);\n    }),\n  ]);\n}\n\nconst instanceMethods = {\n  get config() {\n    // Parse the EJSON properties\n    const config = this._config;\n    if (config) {\n      if (config.partitionValue) {\n        return {\n          ...config,\n          partitionValue: EJSON.parse(config.partitionValue),\n        };\n      } else {\n        return config;\n      }\n    } else {\n      return undefined;\n    }\n  },\n\n  uploadAllLocalChanges(timeout) {\n    return waitForCompletion(\n      this,\n      this._waitForUploadCompletion,\n      timeout,\n      `Uploading changes did not complete in ${timeout} ms.`,\n    );\n  },\n\n  downloadAllServerChanges(timeout) {\n    return waitForCompletion(\n      this,\n      this._waitForDownloadCompletion,\n      timeout,\n      `Downloading changes did not complete in ${timeout} ms.`,\n    );\n  },\n};\n\nconst staticMethods = {\n  // none\n};\n\nmodule.exports = {\n  static: staticMethods,\n  instance: instanceMethods,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAM;EAAEA;AAAF,IAAYC,OAAO,CAAC,MAAD,CAAzB;;AAEA,SAASC,iBAAT,CAA2BC,OAA3B,EAAoCC,EAApC,EAAwCC,OAAxC,EAAiDC,mBAAjD,EAAsE;EACpE,MAAMC,MAAM,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IAC9CN,EAAE,CAACO,IAAH,CAAQR,OAAR,EAAkBS,KAAD,IAAW;MAC1B,IAAIA,KAAK,KAAKC,SAAd,EAAyB;QACvBC,UAAU,CAAC,MAAML,OAAO,EAAd,EAAkB,CAAlB,CAAV;MACD,CAFD,MAEO;QACLK,UAAU,CAAC,MAAMJ,MAAM,CAACE,KAAD,CAAb,EAAsB,CAAtB,CAAV;MACD;IACF,CAND;EAOD,CARc,CAAf;;EASA,IAAIP,OAAO,KAAKQ,SAAhB,EAA2B;IACzB,OAAON,MAAP;EACD;;EACD,OAAOC,OAAO,CAACO,IAAR,CAAa,CAClBR,MADkB,EAElB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IAC/BI,UAAU,CAAC,MAAM;MACfJ,MAAM,CAACJ,mBAAD,CAAN;IACD,CAFS,EAEPD,OAFO,CAAV;EAGD,CAJD,CAFkB,CAAb,CAAP;AAQD;;AAED,MAAMW,eAAe,GAAG;EACtB,IAAIC,MAAJ,GAAa;IACX;IACA,MAAMA,MAAM,GAAG,KAAKC,OAApB;;IACA,IAAID,MAAJ,EAAY;MACV,IAAIA,MAAM,CAACE,cAAX,EAA2B;QACzB,OAAO,EACL,GAAGF,MADE;UAELE,cAAc,EAAEnB,KAAK,CAACoB,KAAN,CAAYH,MAAM,CAACE,cAAnB;QAFX,CAAP;MAID,CALD,MAKO;QACL,OAAOF,MAAP;MACD;IACF,CATD,MASO;MACL,OAAOJ,SAAP;IACD;EACF,CAhBqB;;EAkBtBQ,qBAAqB,CAAChB,OAAD,EAAU;IAC7B,OAAOH,iBAAiB,CACtB,IADsB,EAEtB,KAAKoB,wBAFiB,EAGtBjB,OAHsB,EAIrB,yCAAwCA,OAAQ,MAJ3B,CAAxB;EAMD,CAzBqB;;EA2BtBkB,wBAAwB,CAAClB,OAAD,EAAU;IAChC,OAAOH,iBAAiB,CACtB,IADsB,EAEtB,KAAKsB,0BAFiB,EAGtBnB,OAHsB,EAIrB,2CAA0CA,OAAQ,MAJ7B,CAAxB;EAMD;;AAlCqB,CAAxB;AAqCA,MAAMoB,aAAa,GAAG,CACpB;AADoB,CAAtB;AAIAC,MAAM,CAACC,OAAP,GAAiB;EACfC,MAAM,EAAEH,aADO;EAEfI,QAAQ,EAAEb;AAFK,CAAjB"},"metadata":{},"sourceType":"script"}