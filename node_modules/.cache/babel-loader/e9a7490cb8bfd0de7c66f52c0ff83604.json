{"ast":null,"code":"////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nclass DefaultNetworkTransport {\n  constructor() {\n    if (!DefaultNetworkTransport.fetch) {\n      throw new Error(\"DefaultNetworkTransport.fetch must be set before it's used\");\n    }\n\n    if (!DefaultNetworkTransport.AbortController) {\n      throw new Error(\"DefaultNetworkTransport.AbortController must be set before it's used\");\n    }\n  }\n\n  fetchWithCallbacks(request, handler) {\n    // tslint:disable-next-line: no-console\n    this.fetch(request).then(async response => {\n      const decodedBody = await response.text(); // Pull out the headers of the response\n\n      const responseHeaders = {};\n      response.headers.forEach((value, key) => {\n        responseHeaders[key] = value;\n      });\n      return {\n        statusCode: response.status,\n        headers: responseHeaders,\n        body: decodedBody\n      };\n    }).then(r => handler.onSuccess(r)).catch(e => handler.onError(e));\n  }\n\n  async fetch(request) {\n    const {\n      timeoutMs,\n      url,\n      ...rest\n    } = request;\n    const {\n      signal,\n      cancelTimeout\n    } = this.createTimeoutSignal(timeoutMs);\n\n    try {\n      // We'll await the response to catch throw our own error\n      return await DefaultNetworkTransport.fetch(url, { ...DefaultNetworkTransport.extraFetchOptions,\n        signal,\n        ...rest\n      });\n    } finally {\n      // Whatever happens, cancel any timeout\n      cancelTimeout();\n    }\n  }\n\n  createTimeoutSignal(timeoutMs) {\n    if (typeof timeoutMs === \"number\") {\n      const controller = new DefaultNetworkTransport.AbortController(); // Call abort after a specific number of milliseconds\n\n      const timeout = setTimeout(() => {\n        controller.abort();\n      }, timeoutMs);\n      return {\n        signal: controller.signal,\n        cancelTimeout: () => {\n          clearTimeout(timeout);\n        }\n      };\n    } else {\n      return {\n        signal: undefined,\n        cancelTimeout: () => {\n          /* No-op */\n        }\n      };\n    }\n  }\n\n}\n\nDefaultNetworkTransport.DEFAULT_HEADERS = {\n  \"Content-Type\": \"application/json\"\n}; ////////////////////////////////////////////////////////////////////////////\n\n/**\n * Set the value of `isDevelopmentMode`. This allows each entry point (node vs DOM)\n * to use its own method for determining whether we are in development mode.\n *\n * @param state A boolean indicating whether the user's app is running in\n * development mode or not.\n */\n\nconst setIsDevelopmentMode = state => {}; ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n// Exports a globalThis which is polyfilled for iOS 11/12\n// From https://github.com/zloirock/core-js/blob/master/packages/core-js/internals/global.js\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nconst check = function (it) {\n  return it && it.Math == Math && it;\n}; // eslint-disable-next-line no-restricted-globals\n\n\nconst safeGlobalThis = // eslint-disable-next-line no-restricted-globals\ncheck(typeof globalThis == \"object\" && globalThis) || check(typeof window == \"object\" && window) || // eslint-disable-next-line no-restricted-globals -- safe\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore allow `self`\ncheck(typeof self == \"object\" && self) || // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore allow `global`\ncheck(typeof global == \"object\" && global) || // eslint-disable-next-line no-new-func -- fallback\nfunction () {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore allow `this`\n  return this;\n}() || Function(\"return this\")(); ////////////////////////////////////////////////////////////////////////////\n// React/React Native set a global __DEV__ variable when running in dev mode\n\n\nsetIsDevelopmentMode(typeof __DEV__ !== \"undefined\" && __DEV__); ////////////////////////////////////////////////////////////////////////////\n\nDefaultNetworkTransport.fetch = safeGlobalThis.fetch.bind(safeGlobalThis);\nDefaultNetworkTransport.AbortController = safeGlobalThis.AbortController.bind(safeGlobalThis);\nexport { DefaultNetworkTransport };","map":{"version":3,"names":["DefaultNetworkTransport","constructor","fetch","Error","AbortController","fetchWithCallbacks","request","handler","then","response","decodedBody","text","responseHeaders","headers","forEach","value","key","statusCode","status","body","r","onSuccess","catch","e","onError","timeoutMs","url","rest","signal","cancelTimeout","createTimeoutSignal","extraFetchOptions","controller","timeout","setTimeout","abort","clearTimeout","undefined","DEFAULT_HEADERS","setIsDevelopmentMode","state","check","it","Math","safeGlobalThis","globalThis","window","self","global","Function","__DEV__","bind"],"sources":["/Users/sandeepjain/mongoauth/node_modules/@realm/network-transport/dist/bundle.dom.es.js"],"sourcesContent":["////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nclass DefaultNetworkTransport {\n    constructor() {\n        if (!DefaultNetworkTransport.fetch) {\n            throw new Error(\"DefaultNetworkTransport.fetch must be set before it's used\");\n        }\n        if (!DefaultNetworkTransport.AbortController) {\n            throw new Error(\"DefaultNetworkTransport.AbortController must be set before it's used\");\n        }\n    }\n    fetchWithCallbacks(request, handler) {\n        // tslint:disable-next-line: no-console\n        this.fetch(request)\n            .then(async (response) => {\n            const decodedBody = await response.text();\n            // Pull out the headers of the response\n            const responseHeaders = {};\n            response.headers.forEach((value, key) => {\n                responseHeaders[key] = value;\n            });\n            return {\n                statusCode: response.status,\n                headers: responseHeaders,\n                body: decodedBody,\n            };\n        })\n            .then((r) => handler.onSuccess(r))\n            .catch((e) => handler.onError(e));\n    }\n    async fetch(request) {\n        const { timeoutMs, url, ...rest } = request;\n        const { signal, cancelTimeout } = this.createTimeoutSignal(timeoutMs);\n        try {\n            // We'll await the response to catch throw our own error\n            return await DefaultNetworkTransport.fetch(url, {\n                ...DefaultNetworkTransport.extraFetchOptions,\n                signal,\n                ...rest,\n            });\n        }\n        finally {\n            // Whatever happens, cancel any timeout\n            cancelTimeout();\n        }\n    }\n    createTimeoutSignal(timeoutMs) {\n        if (typeof timeoutMs === \"number\") {\n            const controller = new DefaultNetworkTransport.AbortController();\n            // Call abort after a specific number of milliseconds\n            const timeout = setTimeout(() => {\n                controller.abort();\n            }, timeoutMs);\n            return {\n                signal: controller.signal,\n                cancelTimeout: () => {\n                    clearTimeout(timeout);\n                },\n            };\n        }\n        else {\n            return {\n                signal: undefined,\n                cancelTimeout: () => {\n                    /* No-op */\n                },\n            };\n        }\n    }\n}\nDefaultNetworkTransport.DEFAULT_HEADERS = {\n    \"Content-Type\": \"application/json\",\n};\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Set the value of `isDevelopmentMode`. This allows each entry point (node vs DOM)\n * to use its own method for determining whether we are in development mode.\n *\n * @param state A boolean indicating whether the user's app is running in\n * development mode or not.\n */\nconst setIsDevelopmentMode = (state) => {\n};\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n// Exports a globalThis which is polyfilled for iOS 11/12\n// From https://github.com/zloirock/core-js/blob/master/packages/core-js/internals/global.js\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst check = function (it) {\n    return it && it.Math == Math && it;\n};\n// eslint-disable-next-line no-restricted-globals\nconst safeGlobalThis = \n// eslint-disable-next-line no-restricted-globals\ncheck(typeof globalThis == \"object\" && globalThis) ||\n    check(typeof window == \"object\" && window) ||\n    // eslint-disable-next-line no-restricted-globals -- safe\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore allow `self`\n    check(typeof self == \"object\" && self) ||\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore allow `global`\n    check(typeof global == \"object\" && global) ||\n    // eslint-disable-next-line no-new-func -- fallback\n    (function () {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore allow `this`\n        return this;\n    })() ||\n    Function(\"return this\")();\n\n////////////////////////////////////////////////////////////////////////////\n// React/React Native set a global __DEV__ variable when running in dev mode\nsetIsDevelopmentMode(typeof __DEV__ !== \"undefined\" && __DEV__);\n\n////////////////////////////////////////////////////////////////////////////\nDefaultNetworkTransport.fetch = safeGlobalThis.fetch.bind(safeGlobalThis);\nDefaultNetworkTransport.AbortController = safeGlobalThis.AbortController.bind(safeGlobalThis);\n\nexport { DefaultNetworkTransport };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}