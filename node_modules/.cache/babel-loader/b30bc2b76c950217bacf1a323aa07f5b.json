{"ast":null,"code":"////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nconst {\n  EJSON\n} = require(\"bson\");\n\nconst {\n  MongoDBCollection\n} = require(\"./mongo-client\");\n\nconst {\n  cleanArguments,\n  promisify\n} = require(\"./utils\");\n\nconst instanceMethods = {\n  linkCredentials(credentials) {\n    return promisify(cb => this._linkCredentials(credentials, cb));\n  },\n\n  logOut() {\n    return promisify(cb => this._logOut(cb));\n  },\n\n  async callFunction(name) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return this._callFunctionOnService(name, undefined, ...args);\n  },\n\n  async _callFunctionOnService(name, serviceName) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      args[_key2 - 2] = arguments[_key2];\n    }\n\n    const cleanedArgs = cleanArguments(args);\n    const stringifiedArgs = EJSON.stringify(cleanedArgs, {\n      relaxed: false\n    });\n    const result = await promisify(cb => this._callFunction(name, stringifiedArgs, serviceName, cb));\n    return EJSON.parse(result);\n  },\n\n  async refreshCustomData() {\n    await promisify(cb => this._refreshCustomData(cb));\n    return this.customData;\n  },\n\n  mongoClient(serviceName) {\n    const user = this;\n    return {\n      get serviceName() {\n        return serviceName;\n      },\n\n      db(dbName) {\n        return {\n          get name() {\n            return dbName;\n          },\n\n          collection(collName) {\n            return new MongoDBCollection(user, serviceName, dbName, collName);\n          }\n\n        };\n      }\n\n    };\n  },\n\n  push(serviceName) {\n    const user = this;\n    return {\n      register(token) {\n        return promisify(cb => user._pushRegister(serviceName, token, cb));\n      },\n\n      deregister() {\n        return promisify(cb => user._pushDeregister(serviceName, cb));\n      }\n\n    };\n  },\n\n  get functions() {\n    return this._functionsOnService(undefined);\n  },\n\n  get auth() {\n    const user = this;\n    return new Proxy({}, {\n      get(target, name) {\n        if (name === \"apiKeys\") {\n          return user._authApiKeys;\n        }\n      }\n\n    });\n  },\n\n  get customData() {\n    return EJSON.parse(this._customData);\n  },\n\n  // Internal helpers.\n  _functionsOnService(serviceName) {\n    const user = this;\n    return new Proxy({}, {\n      get(target, name, receiver) {\n        if (typeof name === \"string\" && name != \"inspect\") {\n          return function () {\n            for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n              args[_key3] = arguments[_key3];\n            }\n\n            return user._callFunctionOnService(name, serviceName, ...args);\n          };\n        } else {\n          return Reflect.get(target, name, receiver);\n        }\n      }\n\n    });\n  }\n\n};\nconst staticMethods = {// none\n};\nmodule.exports = {\n  static: staticMethods,\n  instance: instanceMethods\n};","map":{"version":3,"names":["EJSON","require","MongoDBCollection","cleanArguments","promisify","instanceMethods","linkCredentials","credentials","cb","_linkCredentials","logOut","_logOut","callFunction","name","args","_callFunctionOnService","undefined","serviceName","cleanedArgs","stringifiedArgs","stringify","relaxed","result","_callFunction","parse","refreshCustomData","_refreshCustomData","customData","mongoClient","user","db","dbName","collection","collName","push","register","token","_pushRegister","deregister","_pushDeregister","functions","_functionsOnService","auth","Proxy","get","target","_authApiKeys","_customData","receiver","Reflect","staticMethods","module","exports","static","instance"],"sources":["/Users/sandeepjain/mongoauth/node_modules/realm/lib/user.js"],"sourcesContent":["////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nconst { EJSON } = require(\"bson\");\n\nconst { MongoDBCollection } = require(\"./mongo-client\");\nconst { cleanArguments, promisify } = require(\"./utils\");\n\nconst instanceMethods = {\n  linkCredentials(credentials) {\n    return promisify((cb) => this._linkCredentials(credentials, cb));\n  },\n\n  logOut() {\n    return promisify((cb) => this._logOut(cb));\n  },\n\n  async callFunction(name, ...args) {\n    return this._callFunctionOnService(name, undefined, ...args);\n  },\n\n  async _callFunctionOnService(name, serviceName, ...args) {\n    const cleanedArgs = cleanArguments(args);\n    const stringifiedArgs = EJSON.stringify(cleanedArgs, { relaxed: false });\n    const result = await promisify((cb) => this._callFunction(name, stringifiedArgs, serviceName, cb));\n    return EJSON.parse(result);\n  },\n\n  async refreshCustomData() {\n    await promisify((cb) => this._refreshCustomData(cb));\n    return this.customData;\n  },\n\n  mongoClient(serviceName) {\n    const user = this;\n    return {\n      get serviceName() {\n        return serviceName;\n      },\n\n      db(dbName) {\n        return {\n          get name() {\n            return dbName;\n          },\n\n          collection(collName) {\n            return new MongoDBCollection(user, serviceName, dbName, collName);\n          },\n        };\n      },\n    };\n  },\n\n  push(serviceName) {\n    const user = this;\n    return {\n      register(token) {\n        return promisify((cb) => user._pushRegister(serviceName, token, cb));\n      },\n      deregister() {\n        return promisify((cb) => user._pushDeregister(serviceName, cb));\n      },\n    };\n  },\n\n  get functions() {\n    return this._functionsOnService(undefined);\n  },\n\n  get auth() {\n    const user = this;\n    return new Proxy(\n      {},\n      {\n        get(target, name) {\n          if (name === \"apiKeys\") {\n            return user._authApiKeys;\n          }\n        },\n      },\n    );\n  },\n\n  get customData() {\n    return EJSON.parse(this._customData);\n  },\n\n  // Internal helpers.\n  _functionsOnService(serviceName) {\n    const user = this;\n    return new Proxy(\n      {},\n      {\n        get(target, name, receiver) {\n          if (typeof name === \"string\" && name != \"inspect\") {\n            return (...args) => {\n              return user._callFunctionOnService(name, serviceName, ...args);\n            };\n          } else {\n            return Reflect.get(target, name, receiver);\n          }\n        },\n      },\n    );\n  },\n};\n\nconst staticMethods = {\n  // none\n};\n\nmodule.exports = {\n  static: staticMethods,\n  instance: instanceMethods,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}